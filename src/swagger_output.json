{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Code Girls API - Omni Channel",
    "description": "Projeto proposto no encerramento da 3ª edição do LuizaCode, turma NodeJS"
  },
  "host": "omni-channel-luizacode.herokuapp.com",
  "basePath": "/",
  "tags": [
    {
      "name": "Produtos",
      "description": "Endpoints relacionados aos recursos de produtos"
    },
    {
      "name": "Usuarios",
      "description": "Endpoints relacionados aos recursos de usuarios"
    },
    {
      "name": "Listas",
      "description": "Endpoints relacionados a lista de compras de usuários"
    },
    {
      "name": "Lojas",
      "description": "Endpoints para listagem das categorias dos produtos"
    },
    {
      "name": "Categorias",
      "description": "Endpoints para listagem das categorias dos produtos"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "securityDefinitions": {
    "apiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "authorization",
      "description": "Insira seu token para garantir acesso aos endpoints"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/produtos/": {
      "get": {
        "tags": [
          "Produtos"
        ],
        "description": "Endpoint para obter listagem de todos os produtos.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Produtos encontrados",
            "schema": {
              "$ref": "#/definitions/Produtos"
            }
          }
        }
      }
    },
    "/produtos/{produtoId}": {
      "get": {
        "tags": [
          "Produtos"
        ],
        "description": "Endpoint para retornar um produto por ID",
        "parameters": [
          {
            "name": "produtoId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/usuarios/": {
      "get": {
        "tags": [
          "Usuarios"
        ],
        "description": "Endpoint para obter listagem de todos usuarios.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Usuarios encontrados",
            "schema": {
              "$ref": "#/definitions/Usuario"
            }
          },
          "400": {
            "description": "Token inválido"
          }
        }
      },
      "post": {
        "tags": [
          "Usuarios"
        ],
        "description": "Endpoint para criar um novo usuario",
        "parameters": [
          {
            "name": "novoUsuario",
            "in": "body",
            "description": "Cria novo usuário",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/NovoUsuario"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Nome, email, cpf, data_nascimento, e senha são obrigatórios"
          }
        }
      }
    },
    "/usuarios/login": {
      "post": {
        "tags": [
          "Usuarios"
        ],
        "description": "Endpoint para o login do usuário, disponibilizando o token de acesso aos recursos de pedido.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "senha": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login efetuado com sucesso",
            "schema": {
              "$ref": "#/definitions/Usuario"
            }
          },
          "400": {
            "description": "Houve algum erro na requisição"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Usuário não cadastrado"
          }
        }
      }
    },
    "/usuarios/{id}": {
      "put": {
        "tags": [
          "Usuarios"
        ],
        "description": "Endpoint para atualizar cadastro de um usuario",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "atualizarUsuario",
            "in": "body",
            "description": "Atualiza cadastro usuario",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/AtualizarUsuario"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Não foi possivel atualizar esse cadastro"
          }
        }
      },
      "delete": {
        "tags": [
          "Usuarios"
        ],
        "description": "Endpoint para deletar um usuário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário deletado com sucesso",
            "schema": {
              "$ref": "#/definitions/Usuario"
            }
          },
          "400": {
            "description": "Não foi possivel deletar esse usuário"
          }
        }
      }
    },
    "/listas/": {
      "get": {
        "tags": [
          "Listas"
        ],
        "description": "Endpoint para obter listagem de todas as compras.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Listas Encontradas"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Listas"
        ],
        "description": "Endpoint para adicionar produto lista de compras",
        "parameters": [
          {
            "name": "AdicionarProdutoLista",
            "in": "body",
            "description": "Adiciona um produto na lista de compras",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/AdicionarProdutoLista"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Produto adicionado na lista com sucesso"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/listas/compras/{usuarioId}": {
      "get": {
        "tags": [
          "Listas"
        ],
        "description": "Endpoint para obter todas as compras finalizadas do usuário.",
        "parameters": [
          {
            "name": "usuarioId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Compras realizadas"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/listas/carrinho/{usuarioId}": {
      "get": {
        "tags": [
          "Listas"
        ],
        "description": "Endpoint para obter os produtos adicionados no carrinho do usuário (compras não finalizadas)",
        "parameters": [
          {
            "name": "usuarioId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Produtos encontrados no carrinho do usuário"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/listas/{listaId}": {
      "delete": {
        "tags": [
          "Listas"
        ],
        "description": "Endpoint para deletar um produto da lista de compras",
        "parameters": [
          {
            "name": "listaId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Produto deletado da lista com sucesso"
          },
          "400": {
            "description": "Unauthorized"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/listas/finalizar-lista": {
      "post": {
        "tags": [
          "Listas"
        ],
        "description": "Endpoint para finalizar lista de compras",
        "parameters": [
          {
            "name": "FinalizarCompra",
            "in": "body",
            "description": "Finaliza a lista de compras",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/FinalizarCompra"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Compra finalizada com sucesso"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/listas/entrega": {
      "post": {
        "tags": [
          "Listas"
        ],
        "description": "Endpoint para registrar a retirada do pedido",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "numero_pedido": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Produto retirado com sucesso"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/lojas/": {
      "get": {
        "tags": [
          "Lojas"
        ],
        "description": "Endpoint para obter a listagem de todas as lojas",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lojas fisicas encontradas",
            "schema": {
              "$ref": "#/definitions/Lojas"
            }
          }
        }
      }
    },
    "/categorias/": {
      "get": {
        "tags": [
          "Categorias"
        ],
        "description": "Endpoint para obter as categorias dos produtos.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "Produtos": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "produto": {
          "type": "string",
          "example": "Celular"
        },
        "descricao": {
          "type": "string",
          "example": "Smartphone Motorola Moto G30 128GB White Lilac 4G - 4GB RAM Tela 6,5” Câm. Quádrupla + Selfie 13MP"
        },
        "marca": {
          "type": "string",
          "example": "Motorola"
        },
        "valor": {
          "type": "number",
          "example": 1.349
        },
        "image_prod": {
          "type": "string",
          "example": "null"
        },
        "createdAt": {
          "type": "string",
          "example": "2021-09-06 14:21:40"
        },
        "updatedAt": {
          "type": "string",
          "example": "2021-09-06 14:21:40"
        },
        "CategoriaId": {
          "type": "number",
          "example": 1
        }
      }
    },
    "Usuario": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "nome": {
          "type": "string",
          "example": "Maria Chiquinha"
        },
        "email": {
          "type": "string",
          "example": "maria_chiquinha@gmail.com"
        },
        "cpf": {
          "type": "string",
          "example": "123.456.036-59"
        },
        "data_nascimento": {
          "type": "number",
          "example": 1961
        },
        "senha": {
          "type": "string",
          "example": "12345636"
        },
        "createdAt": {
          "type": "string",
          "example": "2021-09-06T17:29:44.105Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2021-09-06T17:29:44.105Z"
        },
        "EnderecoId": {
          "type": "number",
          "example": 1
        }
      }
    },
    "Lojas": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "nome": {
          "type": "string",
          "example": "Loja Centro"
        },
        "logradouro": {
          "type": "string",
          "example": "Av. Amazonas"
        },
        "numero": {
          "type": "number",
          "example": 2000
        },
        "complemento": {
          "type": "string",
          "example": "17 andar"
        },
        "bairro": {
          "type": "string",
          "example": "Centro"
        },
        "cidade": {
          "type": "string",
          "example": "Belo Horizonte"
        },
        "estado": {
          "type": "string",
          "example": "MG"
        },
        "cep": {
          "type": "string",
          "example": "31800-000"
        },
        "telefone": {
          "type": "string",
          "example": "319888-8888"
        },
        "createdAt": {
          "type": "string",
          "example": "2021-09-09 20:56:47"
        },
        "updatedAt": {
          "type": "string",
          "example": "2021-09-09 20:56:47"
        }
      }
    },
    "NovoUsuario": {
      "type": "object",
      "properties": {
        "nome": {
          "type": "string",
          "example": "Maria Chiquinha"
        },
        "email": {
          "type": "string",
          "example": "maria_chiquinha@gmail.com"
        },
        "cpf": {
          "type": "string",
          "example": "321.456.036-59"
        },
        "data_nascimento": {
          "type": "string",
          "example": "1994-08-21"
        },
        "senha": {
          "type": "string",
          "example": "12345636"
        },
        "EnderecoId": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "nome",
        "email",
        "cpf",
        "data_nascimento",
        "senha",
        "EnderecoId"
      ]
    },
    "AtualizarUsuario": {
      "type": "object",
      "properties": {
        "nome": {
          "type": "string",
          "example": "Maria Chiquinha"
        },
        "email": {
          "type": "string",
          "example": "maria_chiquinha@gmail.com"
        },
        "cpf": {
          "type": "string",
          "example": "123.345.134-89"
        },
        "data_nascimento": {
          "type": "string",
          "example": "1994-08-21"
        },
        "senha": {
          "type": "string",
          "example": "12345636"
        },
        "EnderecoId": {
          "type": "number",
          "example": 1
        }
      }
    },
    "AdicionarProdutoLista": {
      "type": "object",
      "properties": {
        "UsuarioId": {
          "type": "number",
          "example": 1
        },
        "ProdutoId": {
          "type": "number",
          "example": 6
        }
      }
    },
    "FinalizarCompra": {
      "type": "object",
      "properties": {
        "UsuarioId": {
          "type": "number",
          "example": 1
        },
        "LojaId": {
          "type": "number",
          "example": 1
        }
      }
    },
    "RetirarPedido": {
      "type": "object",
      "properties": {
        "numero_pedido": {
          "type": "number",
          "example": 12356549
        }
      }
    }
  }
}